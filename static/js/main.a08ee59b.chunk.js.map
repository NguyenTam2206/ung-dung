{"version":3,"sources":["components/Calculatorpage/Buttons/Buttons.js","components/Calculatorpage/Calculator.js","components/Calculatorpage/OutputScreen/OutputScreenRow/OutputScreenRow.js","components/Calculatorpage/OutputScreen/OutputScreen.js","components/Navi/Navi.js","components/QLpage/Table/Table.js","components/QLpage/Form/Form.js","components/QLpage/QLpage.js","components/Caropage/Square/Square.js","components/Caropage/Board/Board.js","components/Caropage/Caro.js","components/RouterURL/RouterURL.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Button","props","className","type","value","label","onClick","handleClick","Calculatorpage","useState","question","answer","state","setState","event","target","ans","eval","err","undefined","str","substr","length","OutputScreenRow","readOnly","OutputScreen","Navi","to","Table","showID","deleteID","onDeleteClicked","statusForm","style","textAlign","formToogle","icon","faTimesCircle","faPlus","usersData","map","key","paddingLeft","username","level","paddingRight","faEdit","id","faTrash","uuidv4","require","Form","txtUser","txtPass","sltLevel","notice","showNotice","changeInput","name","submitForm","preventDefault","reset","item","password","add","setInterval","marginTop","method","onSubmit","e","fontSize","onChange","placeholder","required","minLength","QLpage","useEffect","a","axios","res","data","fetchData","showForm","changeStatusForm","addAction","post","get","deleteAction","delete","Square","Board","renderSquares","numbs","num","squares","checkWinner","lines","i","b","c","Caro","status","Array","fill","setSquares","xIsNext","setXIsNext","winner","RouterURL","exact","path","Calculator","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a08ee59b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <input\r\n            className={props.className}\r\n            type=\"button\"\r\n            value={props.label}\r\n            onClick = {props.handleClick}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport OutputScreen from './OutputScreen/OutputScreen';\r\nimport Button from './Buttons/Buttons';\r\nimport './Calculator.css';\r\n\r\nconst Calculatorpage = () => {\r\n    const [ state, setState ] = useState({\r\n        question : '',\r\n        answer: ''\r\n    })\r\n\r\n    const handleClick = (event) => {\r\n        const value = event.target.value;\r\n        switch (value) {\r\n            case '=' : {\r\n                if (state.question !== ''){\r\n                    let ans =''\r\n                    try{\r\n                        ans = eval(state.question);\r\n                    }\r\n                    catch(err){\r\n                        setState({\r\n                            answer: \"Math Error\"\r\n                        });\r\n                    }\r\n                    if (ans === undefined){\r\n                        setState({\r\n                            answer: \"Math Error\"\r\n                        })\r\n                    } else {\r\n                        setState({\r\n                            answer : ans,\r\n                            question : state.question \r\n                        })\r\n                    }\r\n                }break;\r\n                \r\n            }\r\n            case 'Clear' : {\r\n                setState({\r\n                    question : '',\r\n                    answer : ''\r\n                })\r\n                break;\r\n            }\r\n            case 'Delete' : {\r\n                let str = state.question;\r\n                str = str.substr(0,str.length-1);\r\n                setState({\r\n                    question : str\r\n                })\r\n                break;\r\n            }\r\n            default: {\r\n                setState({\r\n                    question: state.question += value\r\n                })\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid calbg\">\r\n        <div className=\"frame container\">\r\n            <div className=\"mainCalc\">\r\n                <OutputScreen question = {state.question} answer = {state.answer}/>\r\n                <div className=\"button-row\">\r\n                    <Button className=\"btnaction\" label={'Clear'} handleClick = {handleClick}/>\r\n                    <Button className=\"btnaction\" label={'Delete'} handleClick = {handleClick}/>\r\n                    <Button className=\"btnaction\" label={'/'} handleClick = {handleClick}/>\r\n                </div>\r\n                <div className=\"button-row\">\r\n                    <Button label={'8'} handleClick = {handleClick} />\r\n                    <Button label={'9'} handleClick = {handleClick} />\r\n                    <Button className=\"btnaction\" label={'+'} handleClick = {handleClick} />\r\n                </div>\r\n                <div className=\"button-row\">\r\n                    <Button label={'6'} handleClick = {handleClick} />\r\n                    <Button label={'7'} handleClick = {handleClick} />\r\n                    <Button className=\"btnaction\" label={'*'} handleClick = {handleClick} />\r\n                </div>\r\n                <div className=\"button-row\">\r\n                    <Button label={'4'} handleClick = {handleClick} />\r\n                    <Button label={'5'} handleClick = {handleClick} />\r\n                    <Button className=\"btnaction\" label={'-'} handleClick = {handleClick} />\r\n                </div>\r\n                <div className=\"button-row\">\r\n                    <Button label={'2'} handleClick = {handleClick} />\r\n                    <Button label={'3'} handleClick = {handleClick} />\r\n                    <Button className=\"btnaction\" label={'.'} handleClick = {handleClick} />\r\n                </div>\r\n                <div className=\"button-row\">\r\n                    <Button label={'0'} handleClick = {handleClick} />\r\n                    <Button label={'1'} handleClick = {handleClick} />\r\n                    <Button className=\"btnaction\" label={'='} handleClick = {handleClick} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calculatorpage;","import React from 'react';\r\nimport './OutputScreenRow.css';\r\n\r\nconst OutputScreenRow = (props) => {\r\n    return (\r\n        <div className=\"screen-row\">\r\n            <input type=\"text\" readOnly value = {props.value}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutputScreenRow;","import React from 'react';\r\nimport OutputScreenRow from './OutputScreenRow/OutputScreenRow';\r\n\r\nconst OutputScreen = (props) => {\r\n    return (\r\n        <div className=\"screen\">\r\n            <OutputScreenRow value = {props.question}/>\r\n            <OutputScreenRow value = {props.answer}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutputScreen;","import React from 'react';\r\nimport './Navi.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navi = () => {\r\n    return (\r\n        <div className=\"container-fluid navbg\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\r\n                            col-md-12\r\n                            col-sm-12\r\n                            col-xs-12\">\r\n                        <ul className=\"menu\">\r\n                            <li><Link to=\"/QLpage\">Quản Lý</Link></li>\r\n                            <li><Link to=\"/may-tinh\">Máy Tính</Link></li>\r\n                            <li><Link to=\"/ca-ro\">Caro</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navi;","import React from 'react';\r\nimport './Table.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Table = (props) => {\r\n    const showBtn = () => {\r\n        if(!props.statusForm){\r\n            return <a className=\"editbtn them\" onClick={ (event) => props.formToogle (event) }><FontAwesomeIcon icon={faPlus} /></a>\r\n        }\r\n        else{\r\n            return <a className=\"editbtn xoa\" onClick={ (event) => props.formToogle (event) }><FontAwesomeIcon icon={faTimesCircle} /></a>\r\n        }\r\n    }\r\n\r\n    const classTable = () => {\r\n        if(!props.statusForm){\r\n            return \"col-lg-12 col-md-12 col-sm-12 col-xs-12 tablebox\"\r\n        }\r\n        else{\r\n            return \"col-lg-8 col-md-8 col-sm-12 col-xs-12 tablebox\"\r\n        }\r\n    }\r\n\r\n    const mappingData = () => {\r\n        const tableRow = props.usersData && props.usersData.map( (value, key) => {\r\n             return (   <tr key={key}>\r\n                            <td style={{paddingLeft: '8px'}}>{ key + 1 }</td>\r\n                            <td>{ value.username }</td>\r\n                            <td>{ value.level === 1 ? 'Admin' : 'Nhân viên' }</td>\r\n                            <td style={{textAlign: 'center', paddingLeft: '0px', paddingRight: '0px'}}><a className=\"editbtn sua\"><FontAwesomeIcon icon={faEdit} /></a><a className=\"editbtn xoa\" onClick = { () => showID(value.id) }><FontAwesomeIcon icon={faTrash} /></a></td>\r\n                        </tr> \r\n                    ); \r\n        });\r\n            return tableRow;\r\n    }\r\n\r\n    const showID = (deleteID) => {\r\n       props.onDeleteClicked(deleteID);\r\n    }\r\n\r\n    return (\r\n        <div className={ classTable() }>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Thành Viên</th>\r\n                        <th>Quyền</th>\r\n                        <th style={{textAlign: 'center'}}>\r\n                            { showBtn ()}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { mappingData() }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","import React, { useState } from 'react';\r\nimport './Form.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nconst uuidv4 = require('../../../../node_modules/uuid/v4');\r\n\r\nconst Form = (props) => {\r\n\r\n    const [ state,setState ] = useState ({\r\n        txtUser : '',\r\n        txtPass : '',\r\n        sltLevel : 'Thành viên',\r\n        notice : false\r\n    })\r\n\r\n    const showNotice = () => {\r\n        if(state.notice){\r\n            return ( <div className=\"col-lg-12\r\n                                     col-md-12 thongbaothanhcong\">\r\n                         <b>Đăng kí thành công</b>\r\n                     </div>)\r\n        }\r\n    }\r\n\r\n    const changeInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setState({\r\n            ...state,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const submitForm = (event) => {\r\n        event.preventDefault();\r\n        event.target.reset();\r\n        let item = {};\r\n        item.id = uuidv4();\r\n        item.username = state.txtUser;\r\n        item.password = state.txtPass;\r\n        item.level = state.sltLevel === 'Thành viên' ? 2 : 1;\r\n        props.add(item);\r\n        setState({\r\n            ...state,\r\n            notice : true \r\n        });\r\n        setInterval(() => {\r\n            setState({\r\n                ...state,\r\n                notice : false \r\n            })\r\n        }, 2000);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"col-lg-4 visible-lg\r\n                            col-md-4 visible-md\" style={{marginTop: '60px'}}>\r\n                <div className=\"row\">\r\n                    { showNotice() }\r\n                    <div className=\"col-lg-12\r\n                                    col-md-12 thembox\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\r\n                                            col-md-12 themboxhead\">\r\n                                Thêm\r\n                                <a className=\"closebtn\" onClick={ (event) => props.formToogle (event) }><FontAwesomeIcon icon={faTimesCircle} /></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\r\n                                            col-md-12\">\r\n                                <form method=\"POST\" onSubmit={ (e) => submitForm(e) }>\r\n                                    <span style={{fontSize: '18px'}}>Thành viên</span><br></br>\r\n                                    <input type=\"text\" name=\"txtUser\" onChange={ (e) => changeInput(e)} placeholder=\"Nhập ID thành viên\"  className=\"input\" required minLength=\"5\"></input><br></br>\r\n                                    <br></br><span style={{fontSize: '18px'}}>Mật khẩu</span><br></br>\r\n                                    <input type=\"password\" name=\"txtPass\" onChange={ (e) => changeInput(e)} placeholder=\"Nhập mật khẩu\" className=\"input\" required minLength=\"5\"></input><br></br>\r\n                                    <br></br><span style={{fontSize: '18px'}}>Quyền</span><br></br>\r\n                                    <select name=\"sltLevel\" className=\"input\" onChange={ (e) => changeInput(e)} value={ state.sltLevel }>\r\n                                        <option value=\"Thành viên\">Thành viên</option>\r\n                                        <option value=\"Admin\">Admin</option>\r\n                                    </select><br></br>\r\n                                    <input type=\"submit\" className=\"thembtn\" value=\"Thêm\"></input>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-12 visible-sm\r\n                            col-xs-12 visible-xs\" style={{marginTop: '20px'}}>\r\n                <div className=\"row\">\r\n                    { showNotice() }\r\n                    <div className=\"col-sm-12\r\n                                    col-xs-12 thembox\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\r\n                                            col-xs-12 themboxhead\">\r\n                                Thêm\r\n                                <a className=\"closebtn\" onClick={ (event) => props.formToogle (event) }><FontAwesomeIcon icon={faTimesCircle} /></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\r\n                                            col-xs-12\">\r\n                                 <form method=\"POST\" onSubmit={ (e) => submitForm(e) }>\r\n                                    <span style={{fontSize: '18px'}}>Thành viên</span><br></br>\r\n                                    <input type=\"text\" name=\"txtUser\" onChange={ (e) => changeInput(e)} placeholder=\"Nhập ID thành viên\"  className=\"input\" required minLength=\"5\"></input><br></br>\r\n                                    <br></br><span style={{fontSize: '18px'}}>Mật khẩu</span><br></br>\r\n                                    <input type=\"password\" name=\"txtPass\" onChange={ (e) => changeInput(e)} placeholder=\"Nhập mật khẩu\" className=\"input\" required minLength=\"5\"></input><br></br>\r\n                                    <br></br><span style={{fontSize: '18px'}}>Quyền</span><br></br>\r\n                                    <select name=\"sltLevel\" className=\"input\" onChange={ (e) => changeInput(e)} value={ state.sltLevel }>\r\n                                        <option value=\"Thành viên\">Thành viên</option>\r\n                                        <option value=\"Admin\">Admin</option>\r\n                                    </select><br></br>\r\n                                    <input type=\"submit\" className=\"thembtn\" value=\"Thêm\"></input>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { useState, useEffect } from 'react';\r\nimport Table from './Table/Table';\r\nimport Form from './Form/Form';\r\nimport axios from 'axios';\r\n\r\n\r\nconst QLpage = () => {\r\n\r\n  const [ state, setState ] = useState({\r\n    statusForm : false,\r\n    usersData  : []\r\n  })\r\n\r\n  useEffect(()=> {\r\n    const fetchData = async () => {\r\n      const res = await axios(\r\n        'https://l73di.sse.codesandbox.io/data',\r\n        )\r\n        setState({\r\n          ...state,\r\n          usersData : res.data\r\n      });\r\n    }\r\n      fetchData();\r\n  }, []);\r\n\r\n\r\n  const showForm = () => {\r\n    if (state.statusForm) {\r\n      return <Form formToogle = { (event) => changeStatusForm(event) } add={ (item) => addAction(item) } ></Form>\r\n    }\r\n  }\r\n\r\n  const changeStatusForm = (event) => {\r\n    event.preventDefault();\r\n    setState({\r\n      statusForm : !state.statusForm,\r\n      usersData: state.usersData\r\n    })\r\n  }\r\n\r\n\r\n\r\n  \r\n    const addAction = async (item) => {\r\n      await axios.post('https://l73di.sse.codesandbox.io/data', item)\r\n      const res = await axios.get(\r\n        'https://l73di.sse.codesandbox.io/data'\r\n        )\r\n        setState({\r\n          ...state,\r\n          usersData : res.data\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    const deleteAction = async (deleteID) => {\r\n      await axios.delete(`https://l73di.sse.codesandbox.io/data/${deleteID}`)\r\n      const res = await axios.get(\r\n        'https://l73di.sse.codesandbox.io/data'\r\n        )\r\n        setState({\r\n          ...state,\r\n          usersData : res.data\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row visble-lg visible-md\">\r\n          <Table  onDeleteClicked={(deleteID) => deleteAction(deleteID)} usersData={state.usersData} statusForm={ state.statusForm } formToogle = { (event) => changeStatusForm(event) }></Table>\r\n          { showForm() }\r\n        </div>\r\n        <div className=\"row visible-sm visible-xs\">\r\n          { showForm() }\r\n          <Table  onDeleteClicked={(deleteID) => deleteAction(deleteID)} usersData={state.usersData} statusForm={ state.statusForm } formToogle = { (event) => changeStatusForm(event) }></Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QLpage;\r\n","import React from 'react';\r\nimport './Square.css';\r\n\r\nconst Square = (props) => {\r\n    return (\r\n        <div>\r\n            <button className=\"square\" onClick={props.onClick}>{props.value}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Square","import React from \"react\";\r\nimport Square from \"../Square/Square\";\r\nimport './Board.css';\r\n\r\nconst Board = (props) => {\r\n    const renderSquares = (numbs) => {\r\n        return numbs.map ((num,key) => {\r\n            return <Square key = {key} value={ props.squares[num]} onClick={() => props.onClick(num)}></Square>\r\n        }) \r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"board-row\">{renderSquares([0, 1, 2])}</div>\r\n            <div className=\"board-row\">{renderSquares([3, 4, 5])}</div>\r\n            <div className=\"board-row\">{renderSquares([6, 7, 8])}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React, { useState} from 'react';\r\nimport Board from '../Caropage/Board/Board';\r\nimport './Caro.css' ;\r\n\r\nconst Caro = () => {\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n\r\n    const resetClick = () => {\r\n        setSquares({squares: squares})\r\n    }\r\n    const handleClick = i => {\r\n        if (checkWinner(squares) || squares[i]) {\r\n          return;\r\n        }\r\n        squares[i] = xIsNext ? \"X\" : \"O\";\r\n        setSquares(squares);\r\n        setXIsNext(!xIsNext);\r\n      };\r\n    \r\n    const winner = checkWinner(squares);\r\n    \r\n    let status;\r\n    if (winner) {\r\n        status = \"Winner: \" + winner;\r\n    } else {\r\n        status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid carobg\">\r\n            <div className=\"container game\">\r\n                <div className=\"game-board\">\r\n                    <Board squares={squares} onClick={i => handleClick(i)} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                </div>\r\n                <button className=\"reset\" onClick={resetClick}>Reset</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction checkWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\nexport default Caro","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport QLpage from '../QLpage/QLpage';\r\nimport Calculatorpage from '../Calculatorpage/Calculator';\r\nimport Caro from '../Caropage/Caro';\r\n\r\n\r\nconst RouterURL = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/QLpage\">\r\n                    <QLpage />\r\n                </Route>\r\n                <Route path=\"/may-tinh\">\r\n                    <Calculatorpage />\r\n                </Route>\r\n                <Route path=\"/ca-ro\">\r\n                    <Caro />\r\n                </Route>\r\n                <Route>\r\n                    <QLpage path=\"/QLpage\" />\r\n                </Route>\r\n            </Switch>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RouterURL;","import React from 'react';\r\nimport Navi from '../Navi/Navi';\r\n\r\nimport RouterURL from '../RouterURL/RouterURL';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            \r\n                <Navi />\r\n                <RouterURL />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}